{"version":3,"sources":["../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js"],"names":["echarts","zrUtil","graphic","extendComponentView","type","render","gridModel","ecModel","this","group","removeAll","get","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","registerPreprocessor","option","xAxis","yAxis","grid","__DEV__","_util","isObject","each","map","indexOf","getLayoutRect","retrieve","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","getStackedDimension","isAxisUsedInTheGrid","axisModel","getCoordSysModel","Grid","api","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","prototype","fixAxisOnZero","axesMap","otherAxisDim","axis","onZeroRecords","getAxesOnZeroOf","otherAxisOnZeroOf","otherAxes","onZero","onZeroAxisIndex","canOnZeroToAxis","idx","hasOwnProperty","getOnZeroRecordKey","dim","index","axisPointerEnabled","_rect","update","_updateScale","x","scale","y","resize","ignoreContainLabel","gridRect","getBoxLayoutParams","width","getWidth","height","getHeight","axesList","adjustAxes","isHorizontal","extent","inverse","setExtent","coordBase","axisExtent","getExtent","axisExtentSum","toGlobalCoord","coord","toLocalCoord","updateAxisTransform","labelUnionRect","margin","position","getAxis","axisType","axisIndex","axesMapOnDim","name","getAxes","slice","getCartesian","xAxisIndex","yAxisIndex","key","i","coordList","length","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","dataToPoint","dataToCoord","convertFromPixel","pointToData","coordToData","seriesModel","xAxisModel","getReferringComponents","yAxisModel","coordsList","componentIndex","containPoint","point","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","axisPosition","isCategory","onBand","push","addAxis","unionExtent","data","mapDimension","unionExtentFromData","Infinity","eachSeries","isCartesian2D","axesModels","findAxesModels","getData","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","axesTypes","create","grids","dimensions","register","_default","module","exports","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","extend","init","superApply","arguments","resetRange","mergeOption","restoreData","queryComponents","mainType","gridIndex","id","gridId","getAxisType","axisDim","merge","extraOption","offset","retrieveRawValue","getDefaultLabel","dataIndex","labelDims","len","vals","val","join","Cartesian","call","constructor","getAxesByScale","axisX","axisY","contain","containData","reserved","out","clampData","xScale","yScale","xAxisExtent","yAxisExtent","parse","Math","min","max","inherits","dimAxisMapper","_axes","_dimList","scaleType","toLowerCase","filter","_dataCoordConvert","input","method","dimList","output","Array","Axis","coordExtent","getGlobalExtent","asc","ret","reverse","clamp","dependencies","layoutMode","defaultOption","show","zlevel","z","containLabel","backgroundColor","borderWidth","borderColor","axisDefault","_layout","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","__ordinalMeta","createByAxisModel","getCategories","rawData","categories","getOrdinalMeta","mergeAll","registerSubTypeDefaulter","curry","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","tooltip","axisPointer","axisLine","lineStyle","color","symbol","symbolSize","axisTick","inside","axisLabel","rotate","showMinLabel","showMaxLabel","fontSize","splitLine","splitArea","areaStyle","categoryAxis","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","timeAxis","logAxis","logBase","AxisBuilder","AxisView","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","payload","oldAxisGroup","_axisGroup","Group","layout","axisBuilder","getGroup","groupTransition","superCall","remove","_splitAreaColors","_splitLine","isBlank","splitLineModel","getModel","lineStyleModel","lineColors","isArray","lineCount","ticksCoords","getTicksCoords","tickModel","p1","p2","getLineStyle","tickCoord","colorIndex","tickValue","Line","anid","subPixelOptimize","x1","y1","x2","y2","stroke","_splitArea","splitAreaModel","areaStyleModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","createHashMap","cIndex","prev","getAreaStyle","set"],"mappings":"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","file":"static/js/1.32a09f1b.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\n\n\necharts.extendComponentView({\n  type: 'grid',\n  render: function render(gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption() {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function restoreData() {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\n\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function clampData(data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function Cartesian(name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function getAxis(dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function getAxes() {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function addAxis(axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function dataToCoord(val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function coordToData(val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function _dataCoordConvert(input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar Axis2D = function Axis2D(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function getGlobalExtent(asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function getOtherAxis() {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\n\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function getCategories(rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function remove() {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function _splitLine(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function _splitArea(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});"],"sourceRoot":""}